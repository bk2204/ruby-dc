#!/usr/bin/ruby

require 'optparse'
require 'dc/calculator'

def file_from_name(f)
  f == '-' ? $stdin : File.new(f)
end

def find_math_library
  path = nil
  $LOAD_PATH.each do |p|
    loc = File.join(p, 'dc', 'math', 'library.rb')
    return loc if File.exist? loc
  end
  raise "Can't find math library" if path.nil?
end

def parse_options(args)
  options = { scripts: [], mathlib: false }
  OptionParser.new do |opts|
    opts.on('-e', '--expression SCRIPT', 'Run the specified script') do |s|
      options[:scripts] << s
    end

    opts.on('-f', '--file FILE', 'Run the specified file as a script') do |f|
      options[:scripts] << file_from_name(f)
    end

    opts.on('-l', '--mathlib', 'Define the standard math library') do
      require 'dc/generator'

      path = find_math_library
      data = File.read(path)
      options[:scripts] << DC::CodeGenerator::Generator.new(true).emit(data)
      options[:mathlib] = true
    end
  end.parse!(args)
  [options, args]
end

def script(args)
  options, args = parse_options(args)

  calc = DC::Calculator.new($stdin, $stdout, all: true, insecure: true)

  inputs = options[:scripts] + args.map { |f| file_from_name(f) }
  inputs << $stdin if inputs.length <= (options[:mathlib] ? 1 : 0)
  inputs.each do |source|
    source.each_line do |line|
      return 0 unless calc.parse(line)
    end
  end
  0
end

exit(script(ARGV)) if $PROGRAM_NAME == __FILE__
